name: react-native-android-build-apk
on: workflow_dispatch

env:
  TEST_SECRET: ${{ secrets.TEST_SECRET }}

jobs:
  install-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          
          
      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install npm dependencies
        run: |
          npm install
      
      - name: Make gradlew executable
        run: cd android && chmod +x ./gradlew
        
      - name: Build Android Release
        run: |
          cd android && ./gradlew assembleRelease
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/
        
#       - name: Make gradlew executable
#         run: | 
#           cat android/app/build.gradle | grep -Po '(?<=versionCode).*(?=versionName)'
        
        
#       - name: Get current version from gradle.build
#         run: cd android && echo currentversion=`./gradlew -q getBuildVersion -Pcurrentversion | cut -c1-5 `  >> $GITHUB_ENV
        
#       - name:  Get new version from gradle.build
#         run: cd android && echo newversion=`./gradlew -q getBuildVersion -Pnewversion  | tail -n 1` >> $GITHUB_ENV
        
#       - name: Get current version code from gradle.build
#         run: cd android && echo currentversioncode=`./gradlew -q getBuildVersion -Pcurrentversioncode | cut -c1-5` >> $GITHUB_ENV
        
#       - name:  Get new version code from gradle.build
#         run: cd android && echo newversioncode=`./gradlew -q getBuildVersion -Pnewversioncode | tail -n 1` >> $GITHUB_ENV
        
#       - name: Display version
#         run: ${{ env.currentversion }}
        
#       - name: Bump version
#         uses: chkfung/android-version-actions@v1.1
#         with:
#           gradlePath: android/app/build.gradle
#           versionCode: ${{ env.newversioncode }}
#           versionName: "${{ env.newversion }}"
        
#       - name: Tag Release
#         run: |
#           version_name=${{ env.GITHUB_ENV }}
#           echo "Tagging release with tag" ${{ env.GITHUB_ENV }}
#           git tag ${{ env.GITHUB_ENV }}
#           git push origin --tags

#       - name: set up JDK 1.8
#         uses: actions/setup-java@v1
#         with:
#           java-version: 1.8
          
#       - name: Bump version
#         uses: chkfung/android-version-actions@v1.1
#         with:
#           gradlePath: android/app/build.gradle # or app/build.gradle.kts 
#           versionCode: ${{ env.newversioncode }}
#           versionName: "${{ env.newversion }}"
          
#       - uses: stefanzweifel/git-auto-commit-action@v4
#         with:
#           commit_message: Updated version in gradle.build
          
#       - name : Retrieve Version
#         run: |
#           cd android && ./gradlew -q printVersionName
#         id: android_version
        
#       - name : Retrieve Version
#         run: |
#          echo "::set-output name=VERSION_NAME::$(/gradlew -q printVersionName)"
        
#       - name: Get version
#         run: |
#           echo "version_name=${{steps.android_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV
          
#       - name: Get version
#         run: |
#           echo ${{env.version_name}}
        
#   build-android:
#     needs: install-and-test
#     runs-on: ubuntu-latest
#     steps: 
#       - uses: actions/checkout@v2
#       - name: Install npm dependencies
#         run: |
#           npm install
#       - name: Build Android Release
#         run: |
#           cd android && ./gradlew assembleRelease
#       - name: Upload Artifact
#         uses: actions/upload-artifact@v1
#         with:
#           name: app-release.apk
#           path: android/app/build/outputs/apk/release/
